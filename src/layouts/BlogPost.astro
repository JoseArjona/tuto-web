---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import BtnUp from "../components/BtnUp.astro";
import ProgresBar from "../components/ProgresBar.astro";
import "../styles/prism.css";

export interface Props {
  content: {
    title: string;
    description: string;
    pubDate?: string;
    updatedDate?: string;
    heroImage?: string;
    heroImageAlt?: string;
  };
}

const {
  content: {
    title,
    description,
    pubDate,
    updatedDate,
    heroImage,
    heroImageAlt,
  },
} = Astro.props;
---

<html lang="es">
  <head>
    <BaseHead title={title} description={description} />
  </head>

  <body>
    <Header />
    <ProgresBar />
    <BtnUp />
    <main>
      <article>
        {
          heroImage && (
            <img width={720} height={360} src={heroImage} alt={heroImageAlt} />
          )
        }
        <h1>{title}</h1>
        {pubDate && <time>{pubDate}</time>}
        {
          updatedDate && (
            <div>
              Last updated on <time>{updatedDate}</time>
            </div>
          )
        }
        <hr />
        <slot />
      </article>
    </main>
    <Footer />

    <style>
      article {
        max-width: 750px;
        margin: 0 auto;
        padding: 0 1rem;
      }

      hr {
        border-top: 1px solid #ddd;
        margin: 1rem 0;
      }
      body {
        text-align: justify;
      }
      img {
        border-radius: 10px;
      }
    </style>
    <script is:inline>
      function enableCopy(
        selector = "pre",
        childSelector = "code",
        btnText = "ðŸ“‹",
        btnTextSuccess = "Copiedâœ…",
        activeClass = "copy"
      ) {
        document
          .querySelectorAll(`${selector}:not(.${activeClass})`)
          .forEach((node) => {
            // create a "copy" button
            let copyBtn = document.createElement("button");
            copyBtn.innerText = btnText;
            // activeClass acts as flag so we don't add another copy button by  mistake
            copyBtn.classList.add(activeClass);
            node.appendChild(copyBtn);
            copyBtn.addEventListener("click", async () => {
              // get the code to copy
              let code = node.querySelector(childSelector).innerText;
              // copy to clipboard
              await navigator.clipboard.writeText(code);
              // change button text
              copyBtn.innerText = btnTextSuccess;
              // reset button text after 1 second
              setTimeout(() => {
                copyBtn.innerText = btnText;
              }, 1000);
            });
          });
      }
      enableCopy();
    </script>
  </body>
</html>
